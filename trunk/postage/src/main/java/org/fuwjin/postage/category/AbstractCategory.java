/*******************************************************************************
 * Copyright (c) 2010 Michael Doberenz.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 *     Michael Doberenz - initial API and implementation
 ******************************************************************************/
package org.fuwjin.postage.category;

import org.fuwjin.postage.Function;
import org.fuwjin.postage.FunctionFactory;

/**
 * Manages functions that are prefixed with an arbitrary string.
 */
public abstract class AbstractCategory implements FunctionFactory {
   private final String prefix;

   /**
    * Creates a new instance.
    * @param prefix the prefix for functions generated by this factory
    */
   public AbstractCategory(final String prefix) {
      this.prefix = prefix;
   }

   @Override
   public boolean equals(final Object obj) {
      try {
         final AbstractCategory o = (AbstractCategory)obj;
         return prefix.equals(o.prefix);
      } catch(final RuntimeException e) {
         return false;
      }
   }

   @Override
   public Function getFunction(final String name) {
      final int index = name.lastIndexOf('.');
      if(prefix == null || prefix.length() == index && prefix.equals(name.substring(0, index))) {
         return getTargetFunction(name.substring(index + 1));
      }
      return null;
   }

   protected abstract Function getTargetFunction(String name);

   @Override
   public int hashCode() {
      return prefix.hashCode();
   }

   @Override
   public String toString() {
      return prefix;
   }
}
